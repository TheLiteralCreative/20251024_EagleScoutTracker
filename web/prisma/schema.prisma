// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rank {
  SCOUT
  TENDERFOOT
  SECOND_CLASS
  FIRST_CLASS
  STAR
  LIFE
  EAGLE
}

model Scout {
  id          String         @id @default(uuid())
  firstName   String
  lastName    String
  email       String?
  currentRank Rank?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  progress    RankProgress[]

  @@map("scouts")
}

model Requirement {
  id          String         @id @default(uuid())
  code        String         @unique
  title       String
  description String?
  rank        Rank
  sortOrder   Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  progress    RankProgress[]

  @@index([rank, sortOrder])
  @@map("requirements")
}

model RankProgress {
  id              String       @id @default(uuid())
  scoutId         String
  requirementId   String
  startedAt       DateTime?
  eligibleAt      DateTime?
  completedAt     DateTime?
  notes           String?
  approved        Boolean      @default(false)
  approvedInitials String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  scout       Scout       @relation(fields: [scoutId], references: [id])
  requirement Requirement @relation(fields: [requirementId], references: [id])

  @@unique([scoutId, requirementId])
  @@index([requirementId])
  @@map("rank_progress")
}
